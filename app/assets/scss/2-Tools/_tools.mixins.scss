// ==========================================================================
// Mixins
// ==========================================================================


// -------------------------------------
// Media queries
//	
//	Usage:
//	.page-wrap {
//	  width: 75%;
//	  @include breakpoint(large) { width: 60%; }
//	  @include breakpoint(medium) { width: 80%; }
//	  @include breakpoint(small) { width: 95%; }
//	}
//	
// -------------------------------------

@mixin breakpoint($break) {
  @if $break == "small" {
    @media (min-width: $breakpoint--medium) and (max-width: $breakpoint--small) {
      @content;
    }
  }
  @else if $break == "medium" {
    @media (min-width: $breakpoint--medium + 1) {
      @content;
    }
  }
  @else if $break == "large" {
    @media (min-width: $breakpoint--large) {
      @content;
    }
  }
   @else {
    @error "Whoops! No value could be retrieved for `#{$break}`. "
  }
}


// -------------------------------------
// Retina Image
//	
//	Usage:
//	div.logo {
//	   background: url("logo.png") no-repeat;
//	   @include image-2x("logo2x.png", 100px, 25px);
//	 }
//	
// -------------------------------------

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}


// -------------------------------------
// Box Sizing
//	 
//	 Usage:
//	 *,
//	 *:after,
//	 *:before {
//	   @include box-sizing(border-box);
//	 }
//	 
// -------------------------------------

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}


// -------------------------------------
// Border Radius
//	 
//	 Usage:
//	 .button {
//	   @include border-radius(5px);
//	 }
//	 
//	 .submit-button {
//	   @include border-top-radius(10px);
//	   @include border-right-radius(8px);
//	   @include border-bottom-radius(10px);
//	   @include border-left-radius (6px);
//	 }
//	 
// -------------------------------------

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

// Single side border-radius

@mixin border-top-radius($radius) {
  -webkit-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
   -webkit-border-top-left-radius: $radius;
   border-top-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-right-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
     -webkit-border-top-right-radius: $radius;
     border-top-right-radius: $radius;
     background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
  -webkit-border-bottom-right-radius: $radius;
  border-bottom-right-radius: $radius;
   -webkit-border-bottom-left-radius: $radius;
   border-bottom-left-radius: $radius;
   background-clip: padding-box;
}
@mixin border-left-radius($radius) {
  -webkit-border-bottom-left-radius: $radius;
  border-bottom-left-radius: $radius;
     -webkit-border-top-left-radius: $radius;
     border-top-left-radius: $radius;
     background-clip: padding-box;
}


// -------------------------------------
// Opacity
//	 
//	 Usage:
//	 .article-heading {
//	   @include opacity(0.8);
//	 }
//	 	 
// -------------------------------------

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}


// -------------------------------------
// Font Face
//	 
//	 Usage:
//	 @include font-face('Ashbury', 'AshburyLig-webfont', 'Ashbury', 'serif');
//	 
//	 SRC for fonts files: "fonts/family-name/file-name"
//	 	 
// -------------------------------------

@mixin font-face($style-name, $file, $family, $category:"") {
    $filepath: "fonts/" + $family + "/" + $file;
    @font-face {
        font-family: "#{$style-name}";
        src: url($filepath + ".eot");
        src: url($filepath + ".eot?#iefix") format('embedded-opentype'), url($filepath + ".woff") format('woff'), url($filepath + ".ttf")  format('truetype'), url($filepath + ".svg#" + $style-name + "") format('svg');
    }
    %#{$style-name} {
        font: {
            @if $category != "" {
                family: "#{$style-name}", #{$category};
            }
            @else {
                family: "#{$style-name}";
                weight: normal;
            }
        }
    }
}


// -------------------------------------
// Gradient
// -------------------------------------

@mixin gradient($orientation, $start-color, $end-color) {
  background: $start-color;

  @if $orientation == vertical {
    // vertical
    background: linear-gradient(to bottom,  $start-color 0%,$end-color 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(
      startColorstr='$start-color', endColorstr='$end-color',GradientType=0 );
  }

  @else if $orientation == horizontal {
    // horizontal
    background: linear-gradient(to right,  $start-color 0%,$end-color 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(
      startColorstr='$start-color', endColorstr='$end-color',GradientType=1 );
  }
  @else {
    // radial
    background: radial-gradient(ellipse at center,  $start-color 0%,$end-color 100%);
    filter: progid:DXImageTransform.Microsoft.gradient(
      startColorstr='$start-color', endColorstr='$end-color',GradientType=1 );
  }
}


// -------------------------------------
// BEM selectors
// -------------------------------------

@mixin e($name) {
  @at-root &__#{$name} {
    @content;
  }
}

@mixin m($name) {
  @at-root &--#{$name} {
    @content;
  }
}


// -------------------------------------
// Generate modifier color classes
// -------------------------------------

// Background Colors
@mixin bg-colors($map) {
  @each $theme, $color in $map {
    &--#{$theme} {
      background-color: $color;
    }
  }
}

// Text Colors
@mixin text-colors($map) {
  @each $theme, $color in $map {
    &--#{$theme} {
      color: $color;
    }
  }
}


// -------------------------------------
// Generating :before or :after pseudo-element shapes
// -------------------------------------

@mixin p-el(
  $el,
  $el-w: null,
  $el-h: null) {
  @if $el == "before" or $el == "after" {
    &:#{$el} {
      @extend %pseudos;
      width: $el-w;
      height: $el-h;
      @content;
    }
  }
  @else {
    @error "`#{$el}` is not a valid pseudo-element.";
  }
}


// -------------------------------------
// Prefix
//	 
//	 Usage:
//	 .element {
//	   @include prefix((transform: translate(-50%, -50%)), webkit ms);
//	 }
//	 	 
// -------------------------------------

@mixin prefix($map, $vendors: webkit moz ms o) {
  @each $prop, $value in $map {
        @if $vendors {
          @each $vendor in $vendors {
            #{"-" + $vendor + "-" + $prop}: #{$value};
          }
        }
        #{$prop}: #{$value};
  }
}


// -------------------------------------
// SVG background images with PNG and retina fallback
//	 
//	 Usage:
//	 body {
//	   @include background-image('pattern');
//	 }	 	 
//	 
// -------------------------------------

$image-path: '../img' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';
@mixin background-image($name, $size:false){
    background-image: url(#{$image-path}/#{$name}.svg);
    @if($size){
        background-size: $size;
    }
    .no-svg &{
        background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
          background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
        }
    }
}


// -------------------------------------
// Animations and keyframes
//	 
//	 Usage:
//	 @include keyframes(slide-down) {
//	   0% { opacity: 1; }
//	   90% { opacity: 0; }
//	 }
//	 
//	 .element {
//	   width: 100px;
//	   height: 100px;
//	   background: black;
//	   @include animation('slide-down 5s 3');
//	 } 	 
//	 
// -------------------------------------

@mixin keyframes($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }
  @-moz-keyframes $animation-name {
    @content;
  }  
  @-ms-keyframes $animation-name {
    @content;
  }
  @-o-keyframes $animation-name {
    @content;
  }  
  @keyframes $animation-name {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}


// -------------------------------------
// Animations and keyframes
//	 
//	 Usage:
//	 a {
//	   color: gray;
//	   @include transition(color .3s ease);
//	   &:hover {
//	     color: black;
//	   }
//	 } 
//	 
// -------------------------------------

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

// -------------------------------------
// Jeet Grid 
// -------------------------------------

@import "vendors/jeet/grid";